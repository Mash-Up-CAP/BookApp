//
//  SearchBookInteractor.swift
//  BookApp
//
//  Created by Julia on 2023/03/07.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchBookBusinessLogic {
    func fetchBookList(request: SearchBook.FetchBookList.Request)
}

protocol SearchBookDataStore {
    var bookList: [Book]? { get }
}

final class SearchBookInteractor: SearchBookBusinessLogic, SearchBookDataStore {
    var bookList: [Book]?
    
    var presenter: SearchBookPresentationLogic?
    private var worker: SearchBookWorkerProtocol?
    
    init(worker: SearchBookWorkerProtocol = SearchBookWorker()) {
        self.worker = worker
    }

    func fetchBookList(request: SearchBook.FetchBookList.Request) {
        guard let worker = worker else { return }
        Task {
            do {
                let bookModels = try await worker.requestAPIBooks(title: request.title, startIndex: request.startIndex)
                if request.startIndex != 0 {
                    self.books?.append(contentsOf: bookModels)
                } else {
                    self.books = bookModels
                }
                let response = SearchBook.FetchBooks.Response(books: bookModels)
                presenter?.presentFetchedBooks(response: response)
            } catch {
                presenter?.presentFetchBookListError(response: .init(message: error.localizedDescription))
            }
        }
    }

}
