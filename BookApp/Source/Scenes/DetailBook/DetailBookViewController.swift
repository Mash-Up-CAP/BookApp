//
//  DetailBookViewController.swift
//  BookApp
//
//  Created by Julia on 2023/03/09.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Kingfisher

protocol DetailBookDisplayLogic: AnyObject
{
  func displaySomething(viewModel: DetailBook.GetBook.ViewModel)
}

final class DetailBookViewController: UIViewController, DetailBookDisplayLogic
{
  var interactor: DetailBookBusinessLogic?
  var router: (NSObjectProtocol & DetailBookRoutingLogic & DetailBookDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = DetailBookInteractor()
    let presenter = DetailBookPresenter()
    let router = DetailBookRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
      super.viewDidLoad()
      self.getBook()
  }
  
  // MARK: Do something
  
    @IBOutlet private weak var thumbnailImageView: UIImageView!
    @IBOutlet private weak var authorLabel: UILabel!
    @IBOutlet private weak var categoryLabel: UILabel!
    @IBOutlet private weak var pageLabel: UILabel!
    @IBOutlet private weak var publishedDateLabel: UILabel!
    @IBOutlet private weak var publisherLabel: UILabel!
    @IBOutlet private weak var descriptionTextView: UITextView!

    
  private func getBook()
  {
    let request = DetailBook.GetBook.Request()
      interactor?.getBook(request: request)
  }
  
  func displaySomething(viewModel: DetailBook.GetBook.ViewModel)
  {
      let displayedBook = viewModel.displayedBook
      self.navigationItem.title = displayedBook.title
      self.thumbnailImageView.kf.setImage(with: displayedBook.thumbnailURL)
      self.authorLabel.text = displayedBook.author
      self.categoryLabel.text = displayedBook.categories
      self.pageLabel.text = displayedBook.pageCount
      self.publishedDateLabel.text = displayedBook.publishedDate
      self.publisherLabel.text = displayedBook.publisher
      self.descriptionTextView.text = displayedBook.description
      
  }
}
